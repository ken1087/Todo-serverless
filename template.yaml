AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  sam-board

  Sample SAM Template for sam-board

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Api:
    OpenApiVersion: 3.0.1
  Function:
    Handler: app.handler
    Timeout: 3
    Runtime: nodejs12.x

Resources:
  DynamoDB:
    Type: AWS::Serverless::SimpleTable
    Properties:
      PrimaryKey:
        Name: id
        Type: String
      TableName: Todo

  APIGateway:
    Type: AWS::Serverless::Api
    Properties:
      Name: Todo API Gateway
      StageName: prod
      EndpointConfiguration: REGIONAL
      Cors:
        AllowHeaders: "'*'"
        AllowMethods: "'*'"
        AllowOrigin: "'*'"
      Auth:
        UsagePlan:
          CreateUsagePlan: PER_API
          Description: Usage plan for this API

  GetTodoFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      FunctionName: getTodo
      CodeUri: lambda/gettodo
      Role: arn:aws:iam::279511679380:role/Todo_Role
      Events:
        Trigger:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /kang/todo
            Method: get
            Auth:
              ApiKeyRequired: true
            RestApiId: !Ref APIGateway

  PostTodoFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      FunctionName: postTodo
      CodeUri: lambda/posttodo
      Role: arn:aws:iam::279511679380:role/Todo_Role
      Events:
        Trigger:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /kang/todo
            Method: post
            Auth:
              ApiKeyRequired: true
            RestApiId: !Ref APIGateway

  DeleteTodoFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      FunctionName: deleteTodo
      CodeUri: lambda/deletetodo
      Role: arn:aws:iam::279511679380:role/Todo_Role
      Events:
        Trigger:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /kang/todo/{id}
            Method: delete
            Auth:
              ApiKeyRequired: true
            RestApiId: !Ref APIGateway

  PutTodoFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      FunctionName: putTodo
      CodeUri: lambda/puttodo
      Role: arn:aws:iam::279511679380:role/Todo_Role
      Events:
        Trigger:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /kang/todo/{id}
            Method: put
            Auth:
              ApiKeyRequired: true
            RestApiId: !Ref APIGateway

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  APIGateway:
    Description: "API Gateway endpoint URL for Prod stage for Hello World function"
    Value: !Sub "https://${APIGateway}.execute-api.${AWS::Region}.amazonaws.com/prod"
